{"version":3,"sources":["frontend/components/NavBar.jsx","frontend/components/Footer.jsx","frontend/hooks/useAlert.jsx","frontend/components/AlertMessage.jsx","frontend/components/LoginPage.jsx","frontend/components/RegisterPage.jsx","frontend/APIs/api.js","frontend/components/ViewPostPage.jsx","frontend/hooks/usePost.jsx","frontend/hooks/useComments.jsx","frontend/components/TeamPage.jsx","frontend/components/AboutPage.jsx","frontend/components/ContactPage.jsx","frontend/components/NewPostPage.jsx","frontend/components/mocks/mockPosts.js","frontend/components/FilterTree.jsx","frontend/hooks/usePosts.jsx","frontend/components/PostLayout.jsx","frontend/components/PostList.jsx","frontend/components/Search.jsx","frontend/components/Banner.jsx","frontend/components/HomePage.jsx","frontend/components/AccountPage.jsx","frontend/hooks/useTutorPosts.jsx","frontend/App.js","frontend/hooks/useAccount.jsx","frontend/reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","borderRadius","background","color","title","margin","fontFamily","join","loginButton","textTransform","backgroundColor","registerButton","borderColor","accountTypeAndUsernameDiv","width","accountType","fontWeight","NavBar","accountHook","classes","React","useState","anchorEl","setAnchorEl","handleClose","AppBar","position","className","Toolbar","IconButton","component","RouterLink","to","edge","aria-label","style","textDecoration","flexGrow","Typography","align","variant","isLogin","Grid","container","spacing","item","xs","md","account","type","charAt","toUpperCase","slice","username","onClick","event","currentTarget","avatar","Avatar","alt","src","AccountCircle","StyledMenu","id","keepMounted","open","Boolean","onClose","StyledMenuItem","ListItemIcon","fontSize","ListItemText","primary","logout","Button","size","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","theme","palette","common","white","MenuItem","footerNav","display","flexWrap","justifyContent","marginBottom","footerLink","marginLeft","marginRight","footerIcon","Footer","content","Container","maxWidth","Box","py","textAlign","mb","Link","href","gutterBottom","copy","useAlert","contactStatus","alert","setAlert","message","setMessage","isIdle","isSuccess","isFailure","switchToIdle","msg","switchToSuccess","switchToFailure","alertMessage","AlertMessage","alertHook","Alert","severity","marginTop","flexDirection","alignItems","secondary","main","form","submit","LoginPage","rememberUsername","setRememberUsername","rememberPassword","setRememberPassword","query","URLSearchParams","useLocation","search","get","setType","setUsername","password","setPassword","checked","setChecked","history","useHistory","CssBaseline","FormControl","RadioGroup","name","value","onChange","e","target","FormControlLabel","control","Radio","label","onSubmit","preventDefault","input","login","then","result","setTimeout","push","catch","err","TextField","required","fullWidth","autoComplete","autoFocus","Checkbox","float","justify","RegisterPage","fname","lname","register","sm","api","baseURL","headers","accountInfo","height","minWidth","date","postInfo","minHeight","availableDays","available","unavailable","details","description","padding","button","alertMessageDiv","commentListRoot","commentAvatar","thumbUp","thumbDown","unselected","thumbUpSelected","thumbDownSelected","ViewPostPage","isDialogOpen","setIsDialogOpen","postHook","address","post","setPost","map","setMap","getPost","postId","a","fetch","method","res","json","output","success","Error","error","updatePost","updatedInfo","body","JSON","stringify","getGoogleMap","useParams","useEffect","r","usePost","commentsHook","comments","setComments","getComments","addComment","newComment","useComments","days","direction","account_ref","createdAt","substring","idx","Chip","icon","SchoolOutlined","school","course","wage","contact","ThumbDown","Paper","startIcon","isStudent","CommentList","comment","paddingLeft","paddingRight","toString","Comment","wrap","alignContent","isThumbUp","NewCommentDialog","setIsThumbUp","setDescription","handleCancel","Dialog","DialogTitle","DialogContent","DialogContentText","ButtonGroup","multiline","rows","onFocus","setSelectionRange","length","DialogActions","_id","post_ref","textAlignment","quote","Team","lg","header","media","AboutPage","pt","pb","Card","CardActionArea","CardMedia","image","CardHeader","subheader","titleTypographyProps","firstBox","breakpoints","up","secondBox","fullHeightImage","top","left","right","bottom","objectFit","submitButton","ContactPage","paragraph","emailjs","sendForm","console","log","reset","mt","dayButtonGroup","unselectedDayButton","selectedDayButton","NewPostPage","postsHook","mon","setMon","tue","setTue","wed","setWed","thu","setThu","fri","setFri","sat","setSat","sun","setSun","setSchool","setCourse","wageInStr","setWageInStr","setContact","FormGroup","parseInt","newPost","addPost","setValue","isDescription","FormInput","Date","toLocaleDateString","useTreeItemStyles","text","action","hover","grey","borderTopRightRadius","borderBottomRightRadius","typography","fontWeightMedium","fontWeightRegular","group","expanded","selected","labelRoot","labelIcon","labelText","StyledTreeItem","LabelIcon","labelInfo","bgColor","other","TreeItem","FilterTreeView","onNodeSelect","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","nodeId","Label","SupervisorAccountIcon","School","LocalLibrary","ThumbUp","usePosts","posts","setPosts","getPosts","root1","usernameButton","dateButton","schoolButton","boxShadow","courseButton","wageButton","thumbUpButton","PostLayout","PostList","SearchInput","handleSearch","noValidate","InputProps","endAdornment","InputAdornment","backgroundTexture","backgroundRepeat","transform","backgroundSize","backgroundPosition","backgroundImage","primaryAction","down","Banner","HomePage","handleClick","isTutor","AccountPage","tutorPosts","setTutorPosts","getTutorPosts","tutorId","deletePost","useTutorPosts","App","setAccount","useAccount","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f38443af.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport {\n  AppBar, Button, IconButton, makeStyles, Toolbar, Typography,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    borderRadius: 0,\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    color: 'white',\n  },\n  title: {\n    color: 'white',\n    margin: 'auto auto auto 1%',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  loginButton: {\n    borderRadius: 20,\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    color: 'white',\n  },\n  registerButton: {\n    borderRadius: 20,\n    textTransform: 'none',\n    color: 'white',\n    borderColor: 'white',\n  },\n  accountTypeAndUsernameDiv: {\n    width: '90px',\n  },\n  accountType: {\n    fontWeight: 'bold'\n  },\n}));\n\nexport default function NavBar({title, accountHook}) {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.root}>\n        <Toolbar>\n          <IconButton component={RouterLink} to=\"/\" color=\"inherit\" edge=\"start\" aria-label=\"menu\">\n            <HomeIcon />\n          </IconButton>\n          <RouterLink to=\"/\" style={{ textDecoration: 'none', flexGrow: 1 }}>\n            <Typography align=\"left\" variant=\"h5\" aria-label=\"title\" className={classes.title}>\n              {title}\n            </Typography>\n          </RouterLink>\n\n          {\n            accountHook.isLogin() ?\n              <>\n                {/*Account Type & Username*/}\n                <Grid container spacing={0} className={classes.accountTypeAndUsernameDiv}>\n                  <Grid item xs={12} md={12}>\n                    <Typography variant=\"body2\" className={classes.accountType}>\n                      {accountHook.account.type.charAt(0).toUpperCase() + accountHook.account.type.slice(1)}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <Typography variant=\"body2\">\n                      {accountHook.account.username}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                {/*Account Avatar*/}\n                <IconButton onClick={handleClick} aria-label=\"account\">\n                  {\n                    accountHook.account.avatar ?\n                      <Avatar alt={accountHook.account.username[0].toUpperCase()} src={accountHook.account.avatar} />\n                    :\n                      <AccountCircle />\n                  }\n                </IconButton>\n\n                {/*Dropdown Menu for Account & Logout*/}\n                <StyledMenu\n                  id=\"customized-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <StyledMenuItem component={RouterLink} to=\"/account\" onClick={handleClose}>\n                    <ListItemIcon>\n                      <AccountBoxIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"My Account\" />\n                  </StyledMenuItem>\n                  <StyledMenuItem component={RouterLink} to=\"/\" onClick={() => { handleClose(); accountHook.logout() }}>\n                    <ListItemIcon>\n                      <ExitToAppIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Logout\" />\n                  </StyledMenuItem>\n                </StyledMenu>\n              </>\n            :\n              <>\n                <RouterLink to=\"/login?type=tutor\" style={{ textDecoration: 'none' }}>\n                  <Button size=\"small\" aria-label=\"login\" className={classes.loginButton}>\n                    Sign in\n                  </Button>\n                </RouterLink>\n                <RouterLink to=\"/register?type=tutor\" style={{ textDecoration: 'none' }}>\n                  <Button variant=\"outlined\" size=\"small\" aria-label=\"register\" className={classes.registerButton}>\n                    Sign up\n                  </Button>\n                </RouterLink>\n              </>\n          }\n\n        </Toolbar>\n      </AppBar>\n      <br />\n      <br />\n      <br />\n      <br />\n      {/*<br />*/}\n    </div>\n  );\n}\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      background: '#FF8E53',\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  footerNav: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(1)\n  },\n  footerLink: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    color: 'grey',\n    textDecoration: 'none',\n  },\n  footerIcon: {\n    color: 'grey',\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n\n  const content = {\n    'copy': '© 2021 Find My Tutor. All rights reserved.',\n    'link1': 'Team',\n    'link2': 'About',\n    'link3': 'Contact',\n    ...props.content\n  };\n\n  return (\n    <div>\n      <br />\n      <footer>\n        <Container maxWidth=\"lg\">\n          <Box py={6} textAlign=\"center\">\n            <Box component=\"nav\" className={classes.footerNav}>\n              <RouterLink to=\"/team\" aria-label=\"team\" className={classes.footerLink}>{content['link1']}</RouterLink>\n              <RouterLink to=\"/about\" aria-label=\"about\" className={classes.footerLink}>{content['link2']}</RouterLink>\n              <RouterLink to=\"/contact\" aria-label=\"contact\" className={classes.footerLink}>{content['link3']}</RouterLink>\n            </Box>\n            <Box mb={3}>\n              <IconButton component={Link} href=\"https://www.twitter.com\" color=\"secondary\" aria-label=\"Twitter\" className={classes.footerIcon}>\n                <TwitterIcon />\n              </IconButton>\n              <IconButton component={Link} href=\"https://www.facebook.com\" color=\"secondary\" aria-label=\"Facebook\" className={classes.footerIcon}>\n                <FacebookIcon />\n              </IconButton>\n              <IconButton component={Link} href=\"https://www.instagram.com\" color=\"secondary\" aria-label=\"Instagram\" className={classes.footerIcon}>\n                <InstagramIcon />\n              </IconButton>\n              <IconButton component={Link} href=\"https://www.linkedin.com\" color=\"secondary\" aria-label=\"LinkedIn\" className={classes.footerIcon}>\n                <LinkedInIcon />\n              </IconButton>\n            </Box>\n            <Typography color=\"textSecondary\" component=\"p\" variant=\"body2\" gutterBottom={false} className={classes.copy}>{content['copy']}</Typography>\n          </Box>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","/* eslint-disable */\nimport { useState } from 'react';\n\nexport default function useAlert() {\n  const contactStatus = {\n    IDLE: 'idle',\n    SUCCESS: 'success',\n    FAILURE: 'failure',\n  };\n\n  // State: contact\n  const [alert, setAlert] = useState(contactStatus.IDLE);\n  const [message, setMessage] = useState(\"\");\n\n  // check\n  const isIdle = () => {\n    return alert === contactStatus.IDLE;\n  };\n\n  const isSuccess = () => {\n    return alert === contactStatus.SUCCESS;\n  };\n\n  const isFailure = () => {\n    return alert === contactStatus.FAILURE;\n  };\n\n  // switch\n  const switchToIdle = (msg) => {\n    setAlert(contactStatus.IDLE);\n    setMessage(msg);\n  };\n\n  const switchToSuccess = (msg) => {\n    setAlert(contactStatus.SUCCESS);\n    setMessage(msg);\n  };\n\n  const switchToFailure = (msg) => {\n    setAlert(contactStatus.FAILURE);\n    setMessage(msg);\n  };\n\n  return { alert, message, isIdle, isSuccess, isFailure, switchToIdle, switchToSuccess, switchToFailure };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Alert} from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  alertMessage: {\n    // minHeight: \"50px\",\n  },\n}));\n\nexport default function AlertMessage({ className, alertHook }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.alertMessage}>\n      {\n        alertHook.isSuccess() ?\n          <Alert severity=\"success\" onClose={() => {alertHook.switchToIdle(\"\")}}>{alertHook.message}</Alert>\n          : alertHook.isFailure() ?\n          <Alert severity=\"warning\" onClose={() => {alertHook.switchToIdle(\"\")}}>{alertHook.message}</Alert>\n          :\n          <></>\n      }\n    </div>\n  );\n}\n","/* eslint-disable */\n\n// Thanks to the example and useful tool from material-ui\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Container,\n  CssBaseline, FormControl,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles, Radio, RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React, {useState} from 'react';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {useHistory, useLocation} from 'react-router';\nimport {Alert} from \"@material-ui/lab\";\nimport useAlert from \"../hooks/useAlert\";\nimport AlertMessage from \"./AlertMessage\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n  },\n}));\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function LoginPage({ accountHook,\n                            rememberUsername, setRememberUsername,\n                            rememberPassword, setRememberPassword }) {\n  const classes = useStyles();\n\n  const query = useQuery();\n\n  const alertHook = useAlert();\n  const [type, setType] = React.useState(query.get(\"type\"));\n  const [username, setUsername] = useState(rememberUsername);\n  const [password, setPassword] = useState(rememberPassword);\n  const [checked, setChecked] = useState(true);\n\n  const history = useHistory();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const input = {\n      type,\n      username,\n      password,\n    };\n\n    const promise = accountHook.login(input);\n    promise\n      .then((result) => {\n        if (checked) {\n          setRememberUsername(username);\n          setRememberPassword(password);\n        } else {\n          setRememberUsername(\"\");\n          setRememberPassword(\"\");\n        }\n\n        alertHook.switchToSuccess(\"Login is successful.\");\n\n        setTimeout(function () {\n          history.push(\"/\");\n        }, 1000)\n      })\n      .catch((err) => {\n        alertHook.switchToFailure(err.message);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <br />\n        <br />\n        <FormControl component=\"fieldset\">\n          <RadioGroup aria-label=\"type\" name=\"type\" value={type} onChange={e => setType(e.target.value)}>\n            <FormControlLabel value=\"tutor\" control={<Radio />} label=\"Tutor\" />\n            <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\n          </RadioGroup>\n        </FormControl>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            value={username}\n            onChange={(e) => {setUsername(e.target.value)}}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => {setPassword(e.target.value)}}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" checked={checked} onChange={() => {setChecked(!checked)}} />}\n            label=\"Remember me\"\n            style={{ float: 'left' }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            {/*<Grid item xs>*/}\n            {/*  <Link href=\"/forgot\" variant=\"body2\">*/}\n            {/*    Forgot password?*/}\n            {/*  </Link>*/}\n            {/*</Grid>*/}\n            <Grid item>\n              <RouterLink to=\"/register\">\n                Don't have an account? Sign Up\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <br />\n      <AlertMessage alertHook={alertHook} />\n    </Container>\n  );\n};\n","/* eslint-disable */\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {useHistory, useLocation} from 'react-router';\nimport {FormControl, Radio, RadioGroup} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\nimport useAlert from \"../hooks/useAlert\";\nimport AlertMessage from \"./AlertMessage\";\n\n// Thanks to material-ui example:\n// https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-up/SignUp.js\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n  },\n}));\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function RegisterPage({accountHook}) {\n  const query = useQuery();\n\n  const alertHook = useAlert();\n  const [type, setType] = React.useState(query.get(\"type\"));\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const username = e.target.username.value;\n    const password = e.target.password.value;\n    const fname = e.target.fname.value;\n    const lname = e.target.lname.value;\n    const avatar = e.target.avatar.value;\n\n    const input = {\n      type,\n      username,\n      password,\n      fname,\n      lname,\n      avatar\n    };\n\n    const promise = accountHook.register(input);\n    promise\n      .then((result) => {\n        alertHook.switchToSuccess(\"Registration is successful.\");\n\n        setTimeout(function () {\n          history.push(\"/\");\n        }, 1000)\n      })\n      .catch((err) => {\n        alertHook.switchToFailure(err.message);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <br />\n        <br />\n        <FormControl component=\"fieldset\">\n          <RadioGroup aria-label=\"type\" name=\"type\" value={type} onChange={e => setType(e.target.value)}>\n            <FormControlLabel value=\"tutor\" control={<Radio />} label=\"Become A Tutor\" />\n            <FormControlLabel value=\"student\" control={<Radio />} label=\"Become A Student\" />\n          </RadioGroup>\n        </FormControl>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"fname\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lname\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"avatar\"\n                label=\"Avatar\"\n                type=\"avatar\"\n                id=\"avatar\"\n                autoComplete=\"avatar\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox required value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I agree to the terms of use and privacy policy.\"\n                style={{ float: 'left' }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <RouterLink to=\"/login\">\n                Already have an account? Sign in\n              </RouterLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <br />\n      <AlertMessage alertHook={alertHook} />\n    </Container>\n  );\n}\n","/* eslint-disable */\n\nconst baseURL_development = 'http://localhost:5000';\nconst baseURL_production = 'https://find-my-tutor-ubc.herokuapp.com';\n\nconst headers = { 'Content-Type': 'application/json' };\n\nconst api = {\n  baseURL: baseURL_production,\n  headers: headers\n};\n\nexport default api;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport {\n  Avatar,\n  Button, ButtonGroup,\n  Chip,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport {useHistory, useParams} from 'react-router';\nimport { Link } from 'react-router-dom';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport {\n  Bookmark, SchoolOutlined, ThumbDown,\n} from '@material-ui/icons';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport useComments from '../hooks/useComments';\nimport usePost from '../hooks/usePost';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport useAlert from \"../hooks/useAlert\";\nimport AlertMessage from \"./AlertMessage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '80%',\n    margin: 'auto',\n  },\n  accountInfo: {\n    width: '100%',\n    height: theme.spacing(60),\n    margin: 'auto',\n  },\n  avatar: {\n    width: '100%',\n    height: theme.spacing(40),\n    margin: 'auto',\n  },\n  username: {\n    textTransform: 'none',\n    minWidth: '8vh',\n    fontWeight: 'bold',\n    height: theme.spacing(5),\n  },\n  date: {\n    textTransform: 'none',\n    minWidth: '8vh',\n    height: theme.spacing(5),\n  },\n  postInfo: {\n    width: '100%',\n    minHeight: theme.spacing(60),\n    margin: 'auto',\n  },\n  availableDays: {\n    width: '100%',\n    minHeight: theme.spacing(15),\n    margin: 'auto',\n  },\n  available: {\n    width: theme.spacing(7),\n    height: theme.spacing(4),\n    color: 'white',\n    background: '#f1af8d',\n  },\n  unavailable: {\n    width: theme.spacing(7),\n    height: theme.spacing(4),\n    color: 'black',\n  },\n  details: {\n    width: '100%',\n    minHeight: theme.spacing(15),\n    margin: 'auto',\n  },\n  label: {\n    width: '70%',\n    background: '#a5c1e2',\n  },\n  paper: {\n    width: '91%',\n    margin: 'auto',\n  },\n  description: {\n    width: '100%',\n    minHeight: theme.spacing(19),\n    padding: '3% 3% 3% 3%',\n  },\n  button: {\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n    margin: 'auto 3% auto auto',\n  },\n  alertMessageDiv: {\n    maxWidth: '390px',\n    margin: 'auto 3% auto auto',\n  },\n  commentListRoot: {\n    width: '92%',\n    margin: 'auto',\n  },\n  commentAvatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  thumbUp: {\n    color: '#adc837',\n  },\n  thumbDown: {\n    color: '#dd2d6b',\n  },\n  unselected: {\n    color: 'lightgrey',\n    background: 'white',\n  },\n  thumbUpSelected: {\n    color: '#adc837',\n    background: 'white',\n    '&:hover': {\n      color: '#adc837',\n      background: 'white',\n    },\n  },\n  thumbDownSelected: {\n    color: '#dd2d6b',\n    background: 'white',\n    '&:hover': {\n      color: '#dd2d6b',\n      background: 'white',\n    },\n  },\n}));\n\nexport default function ViewPostPage({ accountHook }) {\n  const classes = useStyles();\n\n  const alertHook = useAlert();\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const postHook = usePost();\n  const commentsHook = useComments();\n\n  const post = postHook.post;\n  const comments = commentsHook.comments;\n\n  const history = useHistory();\n\n  const content = {\n    days: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  };\n\n  const handleNewCommentButton = () => {\n    if (accountHook.isLogin() && accountHook.isStudent()) {\n      setIsDialogOpen(true);\n    } else {\n      alertHook.switchToFailure(\"Please sign in as a student to add comments.\");\n      setTimeout(function () {\n        history.push(\"/login?type=student\");\n      }, 3000)\n    }\n  };\n\n  return (\n    <>\n      <br />\n      {post &&\n      <Grid container spacing={1} className={classes.root}>\n\n        {/* TODO: Kevin */}\n        <div>\n          {postHook.map}\n        </div>\n\n        {/*Post*/}\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={3} direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n\n            {/*Account Info*/}\n            <Grid item xs={12} md={4} className={classes.accountInfo}>\n              <Grid container spacing={3} direction=\"column\" justify=\"space-evenly\" alignItems=\"center\">\n\n                {/*Avatar*/}\n                <Grid item xs={12} md={12}>\n                  <Avatar variant=\"square\" className={classes.avatar} alt={post.account_ref.username[0].toUpperCase()} src={post.account_ref.avatar} />\n                </Grid>\n\n                {/*Username*/}\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"h6\" className={classes.username}>\n                    {post.account_ref.username}\n                  </Typography>\n                </Grid>\n\n                {/*Date*/}\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"subtitle1\" className={classes.date}>\n                    {post.createdAt.substring(0,10)}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            {/*Post Info*/}\n            <Grid item xs={12} md={8} className={classes.postInfo}>\n              <Grid container spacing={3}>\n\n                {/*Available Days*/}\n                <Grid item xs={12} md={12} className={classes.availableDays}>\n                  <Grid container spacing={2} justify=\"space-evenly\">\n\n                    <Grid item xs={12} md={12}>\n                      <Typography variant=\"h6\">Available Days</Typography>\n                    </Grid>\n\n                    {post.availableDays.map((available, idx) => (\n                      <Grid item key={idx}>\n                        <Chip label={content.days[idx]} className={available ? classes.available : classes.unavailable}/>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Grid>\n\n                {/*Details*/}\n                <Grid item xs={12} md={12} className={classes.details}>\n                  <Grid container spacing={2}>\n\n                    <Grid item xs={12} md={4}>\n                      <Grid container spacing={2}>\n\n                        {/*School*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<SchoolOutlined />} label={post.school} className={classes.label} />\n                        </Grid>\n\n                        {/*Course*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<ImportContactsIcon />} label={post.course} className={classes.label} />\n                        </Grid>\n\n                      </Grid>\n                    </Grid>\n\n                    <Grid item xs={12} md={4}>\n                      <Grid container spacing={2}>\n\n                        {/*Wage*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<MonetizationOnIcon />} label={\"$\" + post.wage + \" / hour\"} className={classes.label} />\n                        </Grid>\n\n                        {/*Contact*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<ContactPhoneIcon />} label={post.contact} className={classes.label} />\n                        </Grid>\n\n                      </Grid>\n                    </Grid>\n\n                    <Grid item xs={12} md={4}>\n                      <Grid container spacing={2}>\n\n                        {/*ThumbUp*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<ThumbUpIcon />} label={post.thumbUp} className={classes.label} />\n                        </Grid>\n\n                        {/*ThumbDown*/}\n                        <Grid item xs={12} md={12}>\n                          <Chip color='secondary' icon={<ThumbDown />} label={post.thumbDown} className={classes.label} />\n                        </Grid>\n\n                      </Grid>\n                    </Grid>\n\n                  </Grid>\n                </Grid>\n\n                {/*Descriptions*/}\n                <Grid item xs={12} md={12}>\n                  <Paper className={classes.paper}>\n                    <Typography variant=\"body1\" align=\"left\" className={classes.description}>\n                      {post.description}\n                    </Typography>\n                  </Paper>\n                </Grid>\n\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        {/*New Comment Button*/}\n        <Grid item xs={12} md={12} align=\"right\">\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<AddIcon />}\n                  onClick={handleNewCommentButton}>\n            NEW COMMENT\n          </Button>\n        </Grid>\n\n        {/*Show the alert message when user is not a login student.*/}\n        <Grid item xs={12} md={12} align=\"right\">\n          <div className={classes.alertMessageDiv}>\n            <AlertMessage alertHook={alertHook} />\n          </div>\n        </Grid>\n\n        {/*Comments*/}\n        <Grid item xs={12} md={12}>\n          <CommentList comments={comments} accountHook={accountHook}/>\n        </Grid>\n\n        {/* TODO: Jerry - pagination */}\n\n      </Grid>\n      }\n\n      {/*New Comment Dialog*/}\n      <NewCommentDialog\n        isDialogOpen={isDialogOpen}\n        setIsDialogOpen={setIsDialogOpen}\n        accountHook={accountHook}\n        postHook={postHook}\n        commentsHook={commentsHook}\n      />\n    </>\n  );\n};\n\nconst CommentList = ({ comments }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={0} className={classes.commentListRoot}>\n      <Grid item>\n        <Grid container alignItems=\"stretch\">\n          {comments.map((comment, idx) => (\n            <Grid item key={idx.toString()} xs={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n              <br />\n              <Comment comment={comment} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Comment = ({ comment }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container wrap=\"nowrap\" spacing={0} alignContent=\"space-between\">\n      <Grid item xs={2} align=\"center\">\n        <Avatar alt={comment.account_ref.username[0].toUpperCase()} src={comment.account_ref.avatar} className={classes.commentAvatar} />\n      </Grid>\n      <Grid item xs={8}>\n        <h4 style={{ margin: 0, textAlign: 'left' }}>\n          {comment.account_ref.username}\n        </h4>\n        <Typography style={{ textAlign: 'left' }}>\n          {comment.description}\n        </Typography>\n        <br />\n        <Typography variant=\"caption\" display=\"block\" gutterBottom style={{ textAlign: 'left', color: 'grey' }}>\n          { 'posted at ' + comment.createdAt.substring(0,10) }\n        </Typography>\n      </Grid>\n      <Grid item xs={2} align=\"right\">\n        { comment.isThumbUp ?\n          <ThumbUpIcon className={classes.thumbUp} /> :\n          <ThumbDown className={classes.thumbDown} />}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst NewCommentDialog = ({ isDialogOpen, setIsDialogOpen, accountHook, postHook, commentsHook }) => {\n  const classes = useStyles();\n  const { postId } = useParams();\n\n  const alertHook = useAlert();\n\n  const [isThumbUp, setIsThumbUp] = useState(true);\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = () => {\n    const newComment = {\n      isThumbUp,\n      description,\n      account_ref: accountHook.account._id,\n      post_ref: postId\n    };\n    // Add the comment.\n    const promise = commentsHook.addComment(newComment);\n    promise\n      // Update the post with thumbUp/thumbDown + 1.\n      .then((result) => {\n        const updatedInfo = isThumbUp ?\n          {thumbUp: postHook.post.thumbUp + 1} :\n          {thumbDown: postHook.post.thumbDown + 1};\n        return postHook.updatePost(postId, updatedInfo);\n      })\n      // Get the comments.\n      .then((result) => {\n        return commentsHook.getComments(postId);\n      })\n      // Get the post.\n      .then((result) => {\n        return postHook.getPost(postId);\n      })\n      // Clean up.\n      .then((result) => {\n        alertHook.switchToSuccess(\"Comment added successfully.\");\n        setTimeout(function () {\n          setIsDialogOpen(false);\n          alertHook.switchToIdle(null);\n          setIsThumbUp(true);\n          setDescription(\"\");\n        }, 1000)\n      })\n      // Error handling.\n      .catch((err) => {\n        alertHook.switchToFailure(err.message);\n      });\n  }\n\n  const handleCancel = () => {\n    setIsDialogOpen(false);\n    if (!alertHook.isIdle()) {\n      alertHook.switchToIdle(null);\n      setIsThumbUp(true);\n      setDescription(\"\");\n    }\n  }\n\n  return (\n    <Dialog open={isDialogOpen} onClose={handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">New Comment</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Good Experience?</DialogContentText>\n        <ButtonGroup>\n          <Button variant={isThumbUp ? \"contained\" : \"outlined\"}\n                  className={isThumbUp ? classes.thumbUpSelected : classes.unselected}\n                  onClick={() => {setIsThumbUp(true)}}>\n            <ThumbUpIcon />\n          </Button>\n          <Button variant={isThumbUp ? \"outlined\" : \"contained\"}\n                  className={isThumbUp ? classes.unselected : classes.thumbDownSelected}\n                  onClick={() => {setIsThumbUp(false)}}>\n            <ThumbDown />\n          </Button>\n        </ButtonGroup>\n        <TextField\n          margin=\"dense\"\n          id=\"comment-id\"\n          label=\"Description\"\n          type=\"text\"\n          fullWidth\n          multiline\n          rows={5}\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          autoFocus\n          onFocus={(e) =>\n            e.currentTarget.setSelectionRange(\n              e.currentTarget.value.length,\n              e.currentTarget.value.length)}\n        />\n\n        {/*Show the alert message when adding a comment failed.*/}\n        <AlertMessage alertHook={alertHook} />\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleCancel}>\n          CANCEL\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} >\n          SUBMIT\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router\";\nimport api from '../APIs/api';\n\nexport default function usePost(address) {\n  // State: post\n  const [post, setPost] = useState(null);\n  // State: map\n  const [map, setMap] = useState(null);\n\n  // Get a post with its account info.\n  const getPost = async (postId) => {\n    const res = await fetch(api.baseURL + `/posts/${postId}`, {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPost(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Update a post.\n  const updatePost = async (postId, updatedInfo) => {\n    const res = await fetch(api.baseURL + `/posts/${postId}`, {\n      method: 'PUT',\n      headers: api.headers,\n      body: JSON.stringify(updatedInfo)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // TODO: Kevin\n  // Get google map.\n  const getGoogleMap = async (address) => {\n    const googleMap = null;\n    setMap(googleMap);\n  };\n\n  // Effect: fetch a post and its map info.\n  const { postId } = useParams();\n  useEffect(() => {\n    getPost(postId).then(r => {\n      if (post && post.address) {\n        getGoogleMap(post.address);\n      }\n    });\n  }, []);\n\n  return { post, map, getPost, updatePost };\n}\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router\";\nimport api from '../APIs/api';\n\nexport default function useComments() {\n  // State: comments\n  const [comments, setComments] = useState([]);\n\n  // Get a post's all comments with its account info.\n  const getComments = async (postId) => {\n    const res = await fetch(api.baseURL + `/comments/${postId}`, {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setComments(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Add a new comment.\n  const addComment = async (newComment) => {\n    const res = await fetch(api.baseURL + '/comments', {\n      method: 'POST',\n      headers: api.headers,\n      body: JSON.stringify(newComment)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Effect: fetch comments.\n  const { postId } = useParams();\n  useEffect(() => {\n    getComments(postId);\n  }, []);\n\n  return { comments, getComments, addComment };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  textAlignment: {\n    textAlign: 'left',\n  },\n  quote: {\n    textAlign: 'right',\n  },\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    marginRight: theme.spacing(3)\n  },\n}));\n\nexport default function Team(props) {\n  const classes = useStyles();\n\n  const content = {\n    'header': 'Our Team',\n    'description': '\"None of us, including me, ever do great things. But we can all do small things, with great love, and together we can do something wonderful.\"',\n    'quote': ' – Mother Teresa',\n    '01_image': '/teamAvatars/cq.jpg',\n    '01_name': 'Yi Xuan Qi',\n    '01_job': 'Junior Programmer',\n    '02_image': '/teamAvatars/jerry.jpg',\n    '02_name': 'Deyu Liu',\n    '02_job': 'Junior Programmer',\n    '03_image': '/teamAvatars/kevin.jpg',\n    '03_name': 'Kehong Liu',\n    '03_job': 'Junior Programmer',\n    '04_image': '/teamAvatars/franky.jpg',\n    '04_name': 'Chengzhi Fan',\n    '04_job': 'Junior Programmer',\n    ...props.content\n  };\n\n  return (\n    <section className={classes.textAlignment}>\n      <Container maxWidth=\"lg\">\n        <Box py={8}>\n          <Grid container spacing={8}>\n            <Grid item xs={12} lg={4}>\n              <Box maxWidth={768}>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom={true} className={classes.header}>{content['header']}</Typography>\n                <br />\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">{content['description']}</Typography>\n                <br />\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.quote}>{content['quote']}</Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12} lg={8}>\n              <Grid container spacing={6}>\n                <Grid item xs={12} md={6}>\n                  <Box display=\"flex\">\n                    <Avatar alt=\"\" src={content['01_image']} className={classes.avatar} />\n                    <Box>\n                      <Typography variant=\"h6\" component=\"h4\">{content['01_name']}</Typography>\n                      <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">{content['01_job']}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Box display=\"flex\">\n                    <Avatar alt=\"\" src={content['02_image']} className={classes.avatar} />\n                    <Box>\n                      <Typography variant=\"h6\" component=\"h4\">{content['02_name']}</Typography>\n                      <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">{content['02_job']}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Box display=\"flex\">\n                    <Avatar alt=\"\" src={content['03_image']} className={classes.avatar} />\n                    <Box>\n                      <Typography variant=\"h6\" component=\"h4\">{content['03_name']}</Typography>\n                      <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">{content['03_job']}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Box display=\"flex\">\n                    <Avatar alt=\"\" src={content['04_image']} className={classes.avatar} />\n                    <Box>\n                      <Typography variant=\"h6\" component=\"h4\">{content['04_name']}</Typography>\n                      <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">{content['04_job']}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </section>\n  );\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: '256px'\n  },\n}));\n\nexport default function AboutPage(props) {\n  const classes = useStyles();\n\n  const content = {\n    'header': 'About Us',\n    'description': 'Find My Tutor is on its best approach to change the way you get tutoring.',\n    '01_image': 'https://www.k-state.edu/aac/images/tutoring/Tutoring.png',\n    '01_company': 'Become A Tutor',\n    '01_description': 'Professional, dedicated and local.',\n    '02_image': 'https://www.atlasnetwork.org/assets/uploads/news-main/_detail/Students_liberty.png',\n    '02_company': 'Become A Student',\n    '02_description': 'Enjoy the best tutoring experiences.',\n    ...props.content\n  };\n\n  return (\n    <section>\n      <Box pt={8} pb={10}>\n        <Container maxWidth=\"sm\">\n          <Box textAlign=\"center\" mb={5}>\n            <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>{content['header']}</Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">{content['description']}</Typography>\n          </Box>\n        </Container>\n        <Container maxWidth=\"md\">\n          <Box textAlign=\"center\">\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardActionArea component={RouterLink} to=\"/register?type=tutor\">\n                    <CardMedia className={classes.media} image={content['01_image']} />\n                    <CardHeader title={content['01_company']} subheader={content['01_description']} titleTypographyProps={{gutterBottom: true}}/>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardActionArea component={RouterLink} to=\"/register?type=student\">\n                    <CardMedia className={classes.media} image={content['02_image']} />\n                    <CardHeader title={content['02_company']} subheader={content['02_description']} titleTypographyProps={{gutterBottom: true}} />\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      </Box>\n    </section>\n  );\n}\n","/* eslint-disable */\nimport React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport useAlert from '../hooks/useAlert';\nimport emailjs from 'emailjs-com';\nimport AlertMessage from \"./AlertMessage\";\n\nconst useStyles = makeStyles((theme) => ({\n  firstBox: {\n    [theme.breakpoints.up('lg')]: {\n      paddingRight: theme.spacing(6)\n    },\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  secondBox: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: theme.spacing(6)\n    },\n  },\n  fullHeightImage: {\n    position: 'relative',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    objectFit: 'cover',\n    height: '75%',\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  submitButton: {\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n    color: 'white',\n  },\n}));\n\nexport default function ContactPage(props) {\n  const classes = useStyles();\n\n  const alertHook = useAlert();\n  const [checked, setChecked] = useState(false);\n\n  const content = {\n    'header': 'Contact Us',\n    'description': 'We\\'re here to answer questions and discuss your experience.',\n    'terms': 'I agree to the terms of use and privacy policy.',\n    'primary-action': 'Submit',\n    'image': 'https://www.centralelgin.org/en/resourcesGeneral/quick-links-contact-us.png',\n    ...props.content\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (checked) {\n      emailjs.sendForm(\n        'service_4st6mp3',\n        'template_zogqhbh',\n        e.target,\n        'user_0fYIpO4nQwwepA9mcp1ke'\n      ).then(res => {\n          console.log(res);\n        }\n      ).catch(err => {\n          console.log(err);\n        }\n      );\n\n      e.target.reset();\n      setChecked(false);\n\n      alertHook.switchToSuccess(\"Email sent successfully.\");\n    } else {\n      alertHook.switchToFailure(\"Please select \\\"I agree to the terms of use and privacy policy\\\".\");\n    }\n  };\n\n  return (\n    <section>\n      <Grid container>\n        <Grid item xs={12} md={6}>\n          <Box pt={10} display=\"flex\" className={classes.firstBox}>\n            <Container>\n              <Box mb={4}>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom={true}>{content['header']}</Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph={true}>{content['description']}</Typography>\n              </Box>\n\n              <form onSubmit={onSubmit}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField variant=\"outlined\" required fullWidth autoComplete=\"fname\" name=\"firstName\" id=\"firstName\" label=\"First Name\" autoFocus/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField variant=\"outlined\" required fullWidth autoComplete=\"lname\" name=\"lastName\" id=\"lastName\" label=\"Last Name\" />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField variant=\"outlined\" required fullWidth autoComplete=\"email\" name=\"email\" id=\"email\" label=\"Email Address\" />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField variant=\"outlined\" fullWidth autoComplete=\"company\" name=\"company\" id=\"company\" label=\"Company\" />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField variant=\"outlined\" required multiline rows={5} fullWidth autoComplete=\"message\" name=\"message\" id=\"message\" label=\"Message\" />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControlLabel control={<Checkbox checked={checked} onChange={() => {setChecked(!checked)}} name=\"terms\" color=\"primary\" />} label={content['terms']} />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submitButton}>\n                    {content['primary-action']}\n                  </Button>\n                </Box>\n              </form>\n              <br />\n              <AlertMessage alertHook={alertHook} />\n            </Container>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Box pt={10} display=\"flex\" height={768}>\n            <img className={classes.fullHeightImage} src={content['image']} alt=\"\" />\n          </Box>\n        </Grid>\n      </Grid>\n    </section>\n  );\n}\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Avatar,\n  Button, ButtonGroup, FormGroup, Paper, Typography,\n} from '@material-ui/core';\nimport {SchoolOutlined} from \"@material-ui/icons\";\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport {useHistory} from \"react-router\";\nimport useAlert from \"../hooks/useAlert\";\nimport AlertMessage from \"./AlertMessage\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  dayButtonGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  unselectedDayButton: {\n    color: 'black',\n    background: 'white',\n    '&:hover': {\n      color: 'black',\n      background: 'white',\n    },\n    textTransform: 'none',\n  },\n  selectedDayButton: {\n    color: 'white',\n    background: '#f1af8d',\n    '&:hover': {\n      color: 'white',\n      background: '#f1af8d',\n    },\n    textTransform: 'none',\n  },\n  submitButton: {\n    color: 'white',\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n  },\n}));\n\nexport default function NewPostPage({ accountHook, postsHook }) {\n  const classes = useStyles();\n\n  const alertHook = useAlert();\n\n  const [mon, setMon] = useState(false);\n  const [tue, setTue] = useState(false);\n  const [wed, setWed] = useState(false);\n  const [thu, setThu] = useState(false);\n  const [fri, setFri] = useState(false);\n  const [sat, setSat] = useState(false);\n  const [sun, setSun] = useState(false);\n\n  const [school, setSchool] = useState(\"\");\n  const [course, setCourse] = useState(\"\");\n  const [wageInStr, setWageInStr] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const availableDays = [mon, tue, wed, thu, fri, sat, sun];\n    const wage = parseInt(wageInStr, 10);\n    const thumbUp = 0;\n    const thumbDown = 0;\n    const account_ref = accountHook.account? accountHook.account._id : null;\n\n    const newPost = {\n      availableDays,\n      school,\n      course,\n      wage,\n      contact,\n      thumbUp,\n      thumbDown,\n      description,\n      account_ref\n    }\n\n    const Promise = postsHook.addPost(newPost);\n    Promise\n      .then((result) => {\n        alertHook.switchToSuccess(\"Post added successfully.\");\n        setTimeout(function () {\n          history.push(\"/viewPost/\" + result._id);\n        }, 1000)\n      })\n      .catch((err) => {\n        alertHook.switchToFailure(err.message);\n      });\n  };\n\n  return (\n    <Paper variant=\"outlined\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PostAddIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Post\n        </Typography>\n        <br />\n        <br />\n        <FormGroup>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n\n              {/*Available Days*/}\n              <Grid item xs={12} md={12}>\n                <Typography>Available Days</Typography>\n                <div className={classes.dayButtonGroup}>\n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                    <Button size=\"small\" className={mon ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setMon(!mon)}>Mon</Button>\n                    <Button size=\"small\" className={tue ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setTue(!tue)}>Tue</Button>\n                    <Button size=\"small\" className={wed ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setWed(!wed)}>Wed</Button>\n                    <Button size=\"small\" className={thu ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setThu(!thu)}>Thu</Button>\n                    <Button size=\"small\" className={fri ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setFri(!fri)}>Fri</Button>\n                    <Button size=\"small\" className={sat ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setSat(!sat)}>Sat</Button>\n                    <Button size=\"small\" className={sun ? classes.selectedDayButton : classes.unselectedDayButton} onClick={() => setSun(!sun)}>Sun</Button>\n                  </ButtonGroup>\n                </div>\n              </Grid>\n\n              {/*School & Course*/}\n              <Grid item xs={12} md={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} md={6}>\n                    <FormInput label=\"School\" icon={<SchoolOutlined />} value={school} setValue={setSchool} />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <FormInput label=\"Course\" icon={<ImportContactsIcon value={course} />} setValue={setCourse} />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              {/*Wage & Contact*/}\n              <Grid item xs={12} md={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} md={6}>\n                    <FormInput label=\"Wage ($ / h)\" icon={<MonetizationOnIcon value={wageInStr} />} setValue={setWageInStr} />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <FormInput label=\"Contact\" icon={<ContactPhoneIcon value={contact} />} setValue={setContact} />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              {/*Description*/}\n              <Grid item xs={12} md={12}>\n                <FormInput label=\"Description\" icon={<DescriptionIcon />} isDescription={true} value={description} setValue={setDescription} />\n              </Grid>\n\n              {/*Show the alert message when adding a post failed.*/}\n              <Grid item xs={12} md={12}>\n                <AlertMessage alertHook={alertHook} />\n              </Grid>\n\n              {/*Submit Button*/}\n              <Grid item xs={12} md={12}>\n                <Button variant=\"contained\" type=\"submit\" className={classes.submitButton}>Submit</Button>\n              </Grid>\n              <br />\n            </Grid>\n          </form>\n        </FormGroup>\n      </div>\n    </Paper>\n  );\n}\n\nconst FormInput = ({ label, icon, isDescription, value, setValue }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper variant=\"outlined\">\n      <div className={classes.margin}>\n        <Grid container spacing={1} direction=\"row\" alignItems=\"stretch\">\n\n            {isDescription ?\n              <>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    multiline\n                    rows={5}\n                    required\n                    fullWidth\n                    label={label}\n                    value={value}\n                    onChange={(e) => {setValue(e.target.value)}}\n                  />\n                </Grid>\n              </>\n              :\n              <>\n                <Grid item xs={12} md={2}>\n                  {icon}\n                </Grid>\n                <Grid item xs={12} md={10}>\n                  <TextField\n                    required\n                    fullWidth\n                    label={label}\n                    value={value}\n                    onChange={(e) => {setValue(e.target.value)}}\n                  />\n                </Grid>\n              </>\n            }\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","export const mockPosts = [\n  {\n    id: 1,\n    tutor: 'Bob',\n    date: (new Date()).toLocaleDateString(),\n    description: 'best tutor ever',\n    school: 'SFU',\n    course: 'CPSC 102',\n    price: '$5',\n    thumbsUp: 1,\n    thumbsDown: 0,\n  },\n  {\n    id: 2,\n    tutor: 'Cat',\n    date: (new Date()).toLocaleDateString(),\n    description: 'best tutor ever',\n    school: 'UT',\n    course: 'CSE 110',\n    price: '$5',\n    thumbsUp: 1,\n    thumbsDown: 0,\n  },\n  {\n    id: 3,\n    tutor: 'Demar',\n    date: (new Date()).toLocaleDateString(),\n    description: 'best tutor ever',\n    school: 'UBC',\n    course: 'CPSC 455',\n    price: '$5',\n    thumbsUp: 1,\n    thumbsDown: 0,\n  },\n  {\n    id: 4,\n    tutor: 'Super Oligei',\n    date: (new Date()).toLocaleDateString(),\n    description: 'best tutor ever',\n    school: 'UBC',\n    course: 'CPSC 455',\n    price: '$5',\n    thumbsUp: 1,\n    thumbsDown: 0,\n  },\n];\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Typography from '@material-ui/core/Typography';\nimport Label from '@material-ui/icons/Label';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { LocalLibrary, School, ThumbUp } from '@material-ui/icons';\n\nconst useTreeItemStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.text.secondary,\n    '&:hover > $content': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:focus > $content, &$selected > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n      backgroundColor: 'transparent',\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n    //   paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  selected: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.5, 0),\n  },\n  labelIcon: {\n    // marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles();\n  const {\n    labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ...other\n  } = props;\n\n  return (\n    <TreeItem\n      label={(\n        <div className={classes.labelRoot}>\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\n          <Typography variant=\"body2\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      )}\n      style={{\n        '--tree-view-color': color,\n        '--tree-view-bg-color': bgColor,\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nexport default function FilterTreeView({ onNodeSelect }) {\n  const classes = useStyles();\n\n  return (\n    <TreeView\n      className={classes.root}\n      defaultExpanded={['3']}\n      defaultCollapseIcon={<ArrowDropDownIcon />}\n      defaultExpandIcon={<ArrowRightIcon />}\n      defaultEndIcon={<div style={{ width: 24 }} />}\n      onNodeSelect={onNodeSelect}\n    >\n      {/* <StyledTreeItem nodeId=\"1\" labelText=\"All Mail\" labelIcon={MailIcon} /> */}\n      {/* <StyledTreeItem nodeId=\"2\" labelText=\"Trash\" labelIcon={DeleteIcon} /> */}\n      <StyledTreeItem nodeId=\"3\" labelText=\"-------------------- Filters --------------------\" labelIcon={Label}>\n        <StyledTreeItem\n          nodeId=\"5\"\n          labelText=\"Tutor\"\n          labelIcon={SupervisorAccountIcon}\n        //   labelInfo=\"90\"\n          color=\"#1a73e8\"\n          bgColor=\"#e8f0fe\"\n        />\n        <StyledTreeItem\n          nodeId=\"6\"\n          labelText=\"School\"\n          labelIcon={School}\n        //   labelInfo=\"2,294\"\n          color=\"#e3742f\"\n          bgColor=\"#fcefe3\"\n        />\n        <StyledTreeItem\n          nodeId=\"7\"\n          labelText=\"Course\"\n          labelIcon={LocalLibrary}\n        //   labelInfo=\"3,566\"\n          color=\"#a250f5\"\n          bgColor=\"#f3e8fd\"\n        />\n        <StyledTreeItem\n          nodeId=\"8\"\n          labelText=\"ThumbUp\"\n          labelIcon={ThumbUp}\n        //   labelInfo=\"733\"\n          color=\"#3c8039\"\n          bgColor=\"#e6f4ea\"\n        />\n      </StyledTreeItem>\n      {/* <StyledTreeItem nodeId=\"4\" labelText=\"History\" labelIcon={Label} /> */}\n    </TreeView>\n  );\n}\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport api from '../APIs/api';\n\nexport default function usePosts() {\n  // State: posts\n  const [posts, setPosts] = useState([]);\n\n  // Get all posts with its account info.\n  const getPosts = async () => {\n    const res = await fetch(api.baseURL + '/posts', {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPosts(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Add a post.\n  const addPost = async (newPost) => {\n    const res = await fetch(api.baseURL + '/posts', {\n      method: 'POST',\n      headers: api.headers,\n      body: JSON.stringify(newPost)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // TODO: Jerry - filter\n  // Get filtered posts.\n  const getFilteredPosts = async (filter) => {\n    const res = await fetch(api.baseURL + '/posts/filter', {\n      method: 'POST',\n      headers: api.headers,\n      body: JSON.stringify(filter)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPosts(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Effect: fetch posts.\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return { posts, getPosts, addPost };\n}\n","/* eslint-disable */\nimport {\n  Grid, IconButton, Typography, Avatar, makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '98.3%',\n    background: '#f6ddd1',\n  },\n  root1: {\n    width: '98.3%',\n    background: '#fcf4ee',\n  },\n  usernameButton: {\n    textTransform: 'none',\n    minWidth: '8vh',\n    fontWeight: 'bold',\n  },\n  dateButton: {\n    textTransform: 'none',\n    minWidth: '8vh',\n  },\n  schoolButton: {\n    textTransform: 'none',\n    minWidth: '8vh',\n    color: 'white',\n    background: '#f1af8d',\n    boxShadow: 'none',\n  },\n  courseButton: {\n    textTransform: 'none',\n    minWidth: '8vh',\n    color: 'white',\n    background: '#a5c1e2',\n    boxShadow: 'none',\n  },\n  description: {\n    textTransform: 'none',\n  },\n  wageButton: {\n    textTransform: 'none',\n  },\n  thumbUpButton: {\n    textTransform: 'none',\n  },\n}));\n\nexport default function PostLayout({ post, idx }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div>\n        <Grid container spacing={2} className={idx % 2 === 0 ? classes.root : classes.root1}>\n\n          {/*Avatar*/}\n          <Grid item xs={12} md={1}>\n            <IconButton>\n              <Avatar alt={post.account_ref.username[0].toUpperCase()} src={post.account_ref.avatar} />\n            </IconButton>\n          </Grid>\n\n          {/*Name & Date*/}\n          <Grid item xs={12} md={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12}>\n                <Button size=\"small\">\n                  <Typography className={classes.usernameButton}>\n                    { post.account_ref.username }\n                  </Typography>\n                </Button>\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Button size=\"small\" className={classes.dateButton}>\n                  { post.createdAt.substring(0,10) }\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/*School & Course*/}\n          <Grid item xs={12} md={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12}>\n                <Button variant=\"contained\" size=\"small\" className={classes.schoolButton}>\n                  {post.school}\n                </Button>\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Button variant=\"contained\" size=\"small\" className={classes.courseButton}>\n                  {post.course}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/*Description*/}\n          <Grid item xs={12} md={6} align=\"left\">\n              <Typography variant=\"button\" align=\"left\" color=\"textPrimary\" className={classes.description}>\n                  {post.description}\n              </Typography>\n          </Grid>\n\n          {/*Wage & Likes*/}\n          <Grid item xs={12} md={1}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12}>\n                <Button size=\"small\" className={classes.wageButton}>\n                  ${post.wage}\n                </Button>\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Button size=\"small\" className={classes.thumbUpButton} startIcon={<ThumbUpIcon />}>\n                  {post.thumbUp}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <br />\n    </>\n  );\n}\n","/* eslint-disable */\nimport {\n  Grid, makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport {Link} from \"react-router-dom\";\nimport PostLayout from \"./PostLayout\";\n\nconst useStyles = makeStyles(() => ({\n\n}));\n\nexport default function PostList({ postsHook }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <br />\n      {postsHook.posts.map((post, idx) =>\n        <Link key={post._id} to={`viewPost/${post._id}`} style={{ textDecoration: 'none' }}>\n          <Grid item xs={12} md={12}>\n            <PostLayout post={post} idx={idx} />\n          </Grid>\n        </Link>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IconButton, InputAdornment } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(0),\n      width: '100%',\n    },\n  },\n}));\n\nexport const SearchInput = ({ handleSearch }) => {\n  const classes = useStyles();\n\n  const [value, setValue] = useState('');\n\n  console.log(value);\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"search-input\"\n        label=\"Search\"\n        variant=\"outlined\"\n        value={value}\n        onChange={(e) => {\n          e.preventDefault();\n          setValue(e.target.value);\n          handleSearch(e.target.value);\n        }}\n        // onChange={handleSearch}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment>\n              <IconButton>\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </form>\n  );\n};\n","/* eslint-disable */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Banners from \"react-banners\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  backgroundTexture: {\n    margin: 'auto',\n    width: '100%',\n    height: '100%',\n    backgroundRepeat: 'no-repeat',\n    transform: 'scale(1)',\n    backgroundSize: 'cover',\n    backgroundPosition: '50%',\n    backgroundImage:\n      'url(https://png.pngtree.com/thumb_back/fh260/background/20190813/pngtree-horizontal-vector-halloween-banner-background-with-grunge-border-image_297712.jpg)',\n    background: 'lightblue',\n  },\n  primaryAction: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      marginRight: theme.spacing(0),\n      marginBottom: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Banner(props) {\n  const classes = useStyles();\n\n  return (\n    <section className={classes.backgroundTexture}>\n      <Container maxWidth=\"md\">\n        <Box py={2} textAlign=\"center\">\n          <Typography variant=\"h3\" component=\"h2\" gutterBottom={true}>Find My Tutor</Typography>\n          <Typography variant=\"h5\" color=\"textSecondary\" paragraph={true}>\n            A completely free platform for students to find reliable tutors.\n          </Typography>\n          <Box mt={4}>\n            <RouterLink to=\"/register?type=tutor\" style={{ textDecoration: 'none' }}>\n              <Button variant=\"outlined\" color=\"secondary\" className={classes.primaryAction}>SIGN UP</Button>\n            </RouterLink>\n            <RouterLink to=\"/about\" style={{ textDecoration: 'none' }}>\n              <Button color=\"secondary\">ABOUT US</Button>\n            </RouterLink>\n          </Box>\n        </Box>\n      </Container>\n    </section>\n  );\n}\n","/* eslint-disable */\nimport {\n  Button,\n  Grid, makeStyles, Paper,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { mockPosts } from './mocks/mockPosts';\n\nimport FilterTreeView from './FilterTree';\nimport usePosts from '../hooks/usePosts';\nimport PostList from './PostList';\nimport { SearchInput } from './Search';\nimport Banner from \"./Banner\";\nimport AlertMessage from \"./AlertMessage\";\nimport {useHistory} from \"react-router\";\nimport useAlert from \"../hooks/useAlert\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '80%',\n    margin: 'auto',\n  },\n  button: {\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n  },\n  alertMessageDiv: {\n    maxWidth: '390px',\n  },\n}));\n  \nexport default function HomePage({accountHook, postsHook}) {\n  const classes = useStyles();\n\n  const alertHook = useAlert();\n\n  // filter posts based on filter tree selection\n\n  const history = useHistory();\n\n  const handleNewPostButton = () => {\n    if (accountHook.isLogin() && accountHook.isTutor()) {\n      history.push(\"/newPost\");\n    } else {\n      alertHook.switchToFailure(\"Please sign in as a tutor to add posts.\");\n      setTimeout(function () {\n        history.push(\"/login?type=tutor\");\n      }, 3000)\n    }\n  };\n\n  return (\n    <div>\n      <Banner />\n      <Grid container spacing={1} direction=\"column\" align=\"center\" className={classes.root}>\n\n        {/* TODO: Jerry - filter */}\n        {/*Search Bar*/}\n        <br />\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={12}>\n              <Paper variant=\"outlined\">\n              <FilterTreeView onNodeSelect={postsHook.handleClick} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Paper variant=\"outlined\">\n              <SearchInput handleSearch={postsHook.handleSearch} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/*New Post Button*/}\n        <br />\n        <Grid item xs={12} md={12} align=\"right\">\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<AddIcon />}\n                  onClick={handleNewPostButton}>\n            NEW POST\n          </Button>\n        </Grid>\n\n        {/*Show the alert message when user is not a login student.*/}\n        <Grid item xs={12} md={12} align=\"right\">\n          <div className={classes.alertMessageDiv}>\n            <AlertMessage alertHook={alertHook} />\n          </div>\n        </Grid>\n\n        {/*Post List*/}\n        <PostList postsHook={postsHook} />\n\n        {/* TODO: Jerry - pagination */}\n\n      </Grid>\n    </div>\n  );\n};\n\nconst usePostsCards = () => {\n  const filters = ['tutor', 'school', 'thumbup', 'course'];\n  const { posts } = usePosts();\n  const [filter, setFilter] = useState('');\n  // const [filteredPosts, setFilteredPosts] = useState(posts);\n  const [filteredPosts, setFilteredPosts] = useState(mockPosts);\n\n  // Click filter tree item\n  const handleFilterClick = (e) => {\n    e.preventDefault();\n    const item = e.target.innerText.toLowerCase().trim();\n    setFilter(item);\n  };\n\n  // filter posts based on filter tree selection\n  const handleSearch = (newValue) => {\n    const valueProcessed = newValue.trim().toLowerCase();\n    const newCards = mockPosts.filter((card) => {\n      console.log(filter);\n      if (filter && filters.includes(filter)) {\n        return card[filter].trim().toLowerCase().includes(valueProcessed);\n      }\n      console.log(Object.values(card));\n      return Object.values(card).some((val) => {\n        console.log(val);\n        return val.toString().trim().toLowerCase().includes(valueProcessed);\n      });\n    });\n    setFilteredPosts(newCards);\n  };\n\n  useEffect(() => {\n    setFilteredPosts(posts);\n  }, [posts]);\n\n  return {\n    posts, filter, filteredPosts, handleClick: handleFilterClick, handleSearch,\n  };\n};","/* eslint-disable */\nimport React, { useState } from 'react';\nimport {\n  Avatar,\n  Button, ButtonGroup,\n  Chip,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport useTutorPosts from \"../hooks/useTutorPosts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '80%',\n    margin: 'auto',\n  },\n}));\n\nexport default function AccountPage({ accountHook }) {\n  const classes = useStyles();\n\n  const tutorPostsHook = useTutorPosts();\n\n  return (\n    <>\n      {/* TODO: CQ */}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport api from '../APIs/api';\n\nexport default function useTutorPosts() {\n  // State: tutor posts\n  const [tutorPosts, setTutorPosts] = useState([]);\n\n  // TODO: CQ\n  // Get all posts of a tutor.\n  const getTutorPosts = async (tutorId) => {\n    const res = await fetch(api.baseURL + `/posts/?tutorId=${tutorId}`, {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setTutorPosts(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // TODO: CQ\n  // Delete a post.\n  const deletePost = async (postId) => {\n    const res = await fetch(api.baseURL + `/posts/${postId}`, {\n      method: 'DELETE'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Effect: fetch posts.\n  useEffect(() => {\n    getTutorPosts();\n  }, []);\n\n  return { tutorPosts, getTutorPosts, deletePost };\n}\n","/* eslint-disable */\nimport React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\n\nimport './App.css';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport ViewPostPage from './components/ViewPostPage';\nimport TeamPage from './components/TeamPage';\nimport AboutPage from './components/AboutPage';\nimport ContactPage from './components/ContactPage';\nimport useAccount from './hooks/useAccount';\nimport NewPostPage from './components/NewPostPage';\nimport HomePage from \"./components/HomePage\";\nimport usePosts from \"./hooks/usePosts\";\nimport AccountPage from \"./components/AccountPage\";\n\nfunction App() {\n  const accountHook = useAccount();\n  const postsHook = usePosts();\n  const [rememberUsername, setRememberUsername] = useState(\"\");\n  const [rememberPassword, setRememberPassword] = useState(\"\");\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar title=\"Find My Tutor\" accountHook={accountHook} />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage accountHook={accountHook} postsHook={postsHook} />\n          </Route>\n          <Route path=\"/newPost\">\n            <NewPostPage accountHook={accountHook} postsHook={postsHook} />\n          </Route>\n          <Route path=\"/viewPost/:postId\" >\n            <ViewPostPage accountHook={accountHook} />\n          </Route>\n\n          <Route path=\"/register\">\n            <RegisterPage accountHook={accountHook} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage accountHook={accountHook}\n                       rememberUsername={rememberUsername} setRememberUsername={setRememberUsername}\n                       rememberPassword={rememberPassword} setRememberPassword={setRememberPassword} />\n          </Route>\n          <Route path=\"/account\">\n            <AccountPage />\n          </Route>\n          <Route path=\"/team\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactPage />\n          </Route>\n        </Switch>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\nimport { useState } from 'react';\nimport api from '../APIs/api';\n\nexport default function useAccount() {\n  // State: account\n  const [account, setAccount] = useState(null);\n\n  const isLogin = () => {\n    return account !== null;\n  };\n\n  const isTutor = () => {\n    return account.type === 'tutor';\n  };\n\n  const isStudent = () => {\n    return account.type === 'student';\n  };\n\n  // setters\n  const register = async (input) => {\n    const res = await fetch(api.baseURL + '/accounts/register', {\n      method: 'POST',\n      headers: api.headers,\n      body: JSON.stringify(input)\n    });\n    const output = await res.json();\n\n    // If register succeeded, login directly.\n    if (output.success) {\n      setAccount(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  const login = async (input) => {\n    const res = await fetch(api.baseURL + '/accounts/login', {\n      method: 'POST',\n      headers: api.headers,\n      body: JSON.stringify(input)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setAccount(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  const logout = () => {\n    setAccount(null);\n  };\n\n  return { account, isLogin, isTutor, isStudent, register, login, logout};\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './frontend/App';\nimport reportWebVitals from './frontend/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}