{"ast":null,"code":"import _slicedToArray from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import{Button,Grid,makeStyles,Paper}from'@material-ui/core';import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import AddIcon from'@material-ui/icons/Add';import{mockPosts}from'./mocks/mockPosts';import FilterTreeView from'./FilterTree';import usePosts from'../hooks/usePosts';import PostList from'./PostList';import{SearchInput}from'./Search';import Banner from\"./Banner\";import AlertMessage from\"./AlertMessage\";import{useHistory}from\"react-router\";import useAlert from\"../hooks/useAlert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{root:{width:'80%',margin:'auto'},button:{background:'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)'},alertMessageDiv:{maxWidth:'390px'}};});export default function HomePage(_ref){var accountHook=_ref.accountHook,postsHook=_ref.postsHook;var classes=useStyles();var alertHook=useAlert();// filter posts based on filter tree selection\nvar history=useHistory();var handleNewPostButton=function handleNewPostButton(){if(accountHook.isLogin()&&accountHook.isTutor()){history.push(\"/newPost\");}else{alertHook.switchToFailure(\"Please sign in as a tutor to add posts.\");setTimeout(function(){history.push(\"/login?type=tutor\");},3000);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Banner,{}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,direction:\"column\",align:\"center\",className:classes.root,children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",children:/*#__PURE__*/_jsx(FilterTreeView,{onNodeSelect:postsHook.handleClick})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",children:/*#__PURE__*/_jsx(SearchInput,{handleSearch:postsHook.handleSearch})})})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,align:\"right\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",className:classes.button,startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleNewPostButton,children:\"NEW POST\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,align:\"right\",children:/*#__PURE__*/_jsx(\"div\",{className:classes.alertMessageDiv,children:/*#__PURE__*/_jsx(AlertMessage,{alertHook:alertHook})})}),/*#__PURE__*/_jsx(PostList,{postsHook:postsHook})]})]});};var usePostsCards=function usePostsCards(){var filters=['tutor','school','thumbup','course'];var _usePosts=usePosts(),posts=_usePosts.posts;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];// const [filteredPosts, setFilteredPosts] = useState(posts);\nvar _useState3=useState(mockPosts),_useState4=_slicedToArray(_useState3,2),filteredPosts=_useState4[0],setFilteredPosts=_useState4[1];// Click filter tree item\nvar handleFilterClick=function handleFilterClick(e){e.preventDefault();var item=e.target.innerText.toLowerCase().trim();setFilter(item);};// filter posts based on filter tree selection\nvar handleSearch=function handleSearch(newValue){var valueProcessed=newValue.trim().toLowerCase();var newCards=mockPosts.filter(function(card){console.log(filter);if(filter&&filters.includes(filter)){return card[filter].trim().toLowerCase().includes(valueProcessed);}console.log(Object.values(card));return Object.values(card).some(function(val){console.log(val);return val.toString().trim().toLowerCase().includes(valueProcessed);});});setFilteredPosts(newCards);};useEffect(function(){setFilteredPosts(posts);},[posts]);return{posts:posts,filter:filter,filteredPosts:filteredPosts,handleClick:handleFilterClick,handleSearch:handleSearch};};","map":{"version":3,"sources":["/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/src/frontend/components/HomePage.jsx"],"names":["Button","Grid","makeStyles","Paper","React","useEffect","useState","Link","AddIcon","mockPosts","FilterTreeView","usePosts","PostList","SearchInput","Banner","AlertMessage","useHistory","useAlert","useStyles","root","width","margin","button","background","alertMessageDiv","maxWidth","HomePage","accountHook","postsHook","classes","alertHook","history","handleNewPostButton","isLogin","isTutor","push","switchToFailure","setTimeout","handleClick","handleSearch","usePostsCards","filters","posts","filter","setFilter","filteredPosts","setFilteredPosts","handleFilterClick","e","preventDefault","item","target","innerText","toLowerCase","trim","newValue","valueProcessed","newCards","card","console","log","includes","Object","values","some","val","toString"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport {\n  Button,\n  Grid, makeStyles, Paper,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { mockPosts } from './mocks/mockPosts';\n\nimport FilterTreeView from './FilterTree';\nimport usePosts from '../hooks/usePosts';\nimport PostList from './PostList';\nimport { SearchInput } from './Search';\nimport Banner from \"./Banner\";\nimport AlertMessage from \"./AlertMessage\";\nimport {useHistory} from \"react-router\";\nimport useAlert from \"../hooks/useAlert\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '80%',\n    margin: 'auto',\n  },\n  button: {\n    background: 'linear-gradient(45deg, #F36887AE 30%, #F18651B0 90%)',\n  },\n  alertMessageDiv: {\n    maxWidth: '390px',\n  },\n}));\n  \nexport default function HomePage({accountHook, postsHook}) {\n  const classes = useStyles();\n\n  const alertHook = useAlert();\n\n  // filter posts based on filter tree selection\n\n  const history = useHistory();\n\n  const handleNewPostButton = () => {\n    if (accountHook.isLogin() && accountHook.isTutor()) {\n      history.push(\"/newPost\");\n    } else {\n      alertHook.switchToFailure(\"Please sign in as a tutor to add posts.\");\n      setTimeout(function () {\n        history.push(\"/login?type=tutor\");\n      }, 3000)\n    }\n  };\n\n  return (\n    <div>\n      <Banner />\n      <Grid container spacing={1} direction=\"column\" align=\"center\" className={classes.root}>\n\n        {/* TODO: Jerry - filter */}\n        {/*Search Bar*/}\n        <br />\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={12}>\n              <Paper variant=\"outlined\">\n              <FilterTreeView onNodeSelect={postsHook.handleClick} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Paper variant=\"outlined\">\n              <SearchInput handleSearch={postsHook.handleSearch} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/*New Post Button*/}\n        <br />\n        <Grid item xs={12} md={12} align=\"right\">\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<AddIcon />}\n                  onClick={handleNewPostButton}>\n            NEW POST\n          </Button>\n        </Grid>\n\n        {/*Show the alert message when user is not a login student.*/}\n        <Grid item xs={12} md={12} align=\"right\">\n          <div className={classes.alertMessageDiv}>\n            <AlertMessage alertHook={alertHook} />\n          </div>\n        </Grid>\n\n        {/*Post List*/}\n        <PostList postsHook={postsHook} />\n\n        {/* TODO: Jerry - pagination */}\n\n      </Grid>\n    </div>\n  );\n};\n\nconst usePostsCards = () => {\n  const filters = ['tutor', 'school', 'thumbup', 'course'];\n  const { posts } = usePosts();\n  const [filter, setFilter] = useState('');\n  // const [filteredPosts, setFilteredPosts] = useState(posts);\n  const [filteredPosts, setFilteredPosts] = useState(mockPosts);\n\n  // Click filter tree item\n  const handleFilterClick = (e) => {\n    e.preventDefault();\n    const item = e.target.innerText.toLowerCase().trim();\n    setFilter(item);\n  };\n\n  // filter posts based on filter tree selection\n  const handleSearch = (newValue) => {\n    const valueProcessed = newValue.trim().toLowerCase();\n    const newCards = mockPosts.filter((card) => {\n      console.log(filter);\n      if (filter && filters.includes(filter)) {\n        return card[filter].trim().toLowerCase().includes(valueProcessed);\n      }\n      console.log(Object.values(card));\n      return Object.values(card).some((val) => {\n        console.log(val);\n        return val.toString().trim().toLowerCase().includes(valueProcessed);\n      });\n    });\n    setFilteredPosts(newCards);\n  };\n\n  useEffect(() => {\n    setFilteredPosts(posts);\n  }, [posts]);\n\n  return {\n    posts, filter, filteredPosts, handleClick: handleFilterClick, handleSearch,\n  };\n};"]},"metadata":{},"sourceType":"module"}