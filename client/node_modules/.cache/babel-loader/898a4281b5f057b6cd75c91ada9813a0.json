{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useEffect,useState}from'react';import{api}from'../APIs/api';import{useParams}from\"react-router\";export default function usePost(address){// State: post\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),post=_useState2[0],setPost=_useState2[1];// State: map\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),map=_useState4[0],setMap=_useState4[1];// Get a post with its account info.\nvar getPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(postId){var res,output;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://localhost:5000/posts/'+postId,{method:'GET'});case 2:res=_context.sent;_context.next=5;return res.json();case 5:output=_context.sent;if(!output.success){_context.next=11;break;}setPost(output.result);return _context.abrupt(\"return\",output.result);case 11:throw new Error(output.error);case 12:case\"end\":return _context.stop();}}},_callee);}));return function getPost(_x){return _ref.apply(this,arguments);};}();// Update a post.\nvar updatePost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(postId,updatedInfo){var res,output;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://localhost:5000/posts/'+postId,{method:'PUT',headers:{'Content-type':'application/json'},body:JSON.stringify(updatedInfo)});case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:output=_context2.sent;if(!output.success){_context2.next=10;break;}return _context2.abrupt(\"return\",output.result);case 10:throw new Error(output.error);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function updatePost(_x2,_x3){return _ref2.apply(this,arguments);};}();// TODO: Kevin\n// Get google map.\nvar getGoogleMap=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address){var googleMap;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:googleMap=null;setMap(googleMap);case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function getGoogleMap(_x4){return _ref3.apply(this,arguments);};}();// Effect: fetch a post and its map info.\nvar _useParams=useParams(),postId=_useParams.postId;useEffect(function(){getPost(postId).then(function(r){if(post&&post.address){getGoogleMap(post.address);}});},[]);return{post:post,map:map,getPost:getPost,updatePost:updatePost};}","map":{"version":3,"sources":["/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/src/frontend/hooks/usePost.jsx"],"names":["React","useEffect","useState","api","useParams","usePost","address","post","setPost","map","setMap","getPost","postId","fetch","method","res","json","output","success","result","Error","error","updatePost","updatedInfo","headers","body","JSON","stringify","getGoogleMap","googleMap","then","r"],"mappings":"0gBAAA,oBACA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,GAAT,KAAoB,aAApB,CACA,OAAQC,SAAR,KAAwB,cAAxB,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,OAAjB,CAA0B,CACvC;AACA,cAAwBJ,QAAQ,CAAC,IAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA;AACA,eAAsBN,QAAQ,CAAC,IAAD,CAA9B,yCAAOO,GAAP,eAAYC,MAAZ,eAEA;AACA,GAAMC,CAAAA,OAAO,0FAAG,iBAAOC,MAAP,uJACIC,CAAAA,KAAK,CAAC,+BAAiCD,MAAlC,CAA0C,CAC/DE,MAAM,CAAE,KADuD,CAA1C,CADT,QACRC,GADQ,qCAIOA,CAAAA,GAAG,CAACC,IAAJ,EAJP,QAIRC,MAJQ,mBAMVA,MAAM,CAACC,OANG,0BAOZV,OAAO,CAACS,MAAM,CAACE,MAAR,CAAP,CAPY,gCAQLF,MAAM,CAACE,MARF,eAUN,IAAIC,CAAAA,KAAJ,CAAUH,MAAM,CAACI,KAAjB,CAVM,wDAAH,kBAAPV,CAAAA,OAAO,4CAAb,CAcA;AACA,GAAMW,CAAAA,UAAU,2FAAG,kBAAOV,MAAP,CAAeW,WAAf,4JACCV,CAAAA,KAAK,CAAC,+BAAiCD,MAAlC,CAA0C,CAC/DE,MAAM,CAAE,KADuD,CAE/DU,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFsD,CAG/DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAHyD,CAA1C,CADN,QACXR,GADW,uCAMIA,CAAAA,GAAG,CAACC,IAAJ,EANJ,QAMXC,MANW,oBAQbA,MAAM,CAACC,OARM,4DASRD,MAAM,CAACE,MATC,eAWT,IAAIC,CAAAA,KAAJ,CAAUH,MAAM,CAACI,KAAjB,CAXS,0DAAH,kBAAVC,CAAAA,UAAU,kDAAhB,CAeA;AACA;AACA,GAAMM,CAAAA,YAAY,2FAAG,kBAAOtB,OAAP,oIACbuB,SADa,CACD,IADC,CAEnBnB,MAAM,CAACmB,SAAD,CAAN,CAFmB,wDAAH,kBAAZD,CAAAA,YAAY,8CAAlB,CAKA;AACA,eAAmBxB,SAAS,EAA5B,CAAQQ,MAAR,YAAQA,MAAR,CAEAX,SAAS,CAAC,UAAM,CACdU,OAAO,CAACC,MAAD,CAAP,CAAgBkB,IAAhB,CAAqB,SAAAC,CAAC,CAAI,CACxB,GAAIxB,IAAI,EAAIA,IAAI,CAACD,OAAjB,CAA0B,CACxBsB,YAAY,CAACrB,IAAI,CAACD,OAAN,CAAZ,CACD,CACF,CAJD,EAKD,CANQ,CAMN,EANM,CAAT,CAQA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAHA,GAAR,CAAaE,OAAO,CAAPA,OAAb,CAAsBW,UAAU,CAAVA,UAAtB,CAAP,CACD","sourcesContent":["/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport { api } from '../APIs/api';\nimport {useParams} from \"react-router\";\n\nexport default function usePost(address) {\n  // State: post\n  const [post, setPost] = useState(null);\n  // State: map\n  const [map, setMap] = useState(null);\n\n  // Get a post with its account info.\n  const getPost = async (postId) => {\n    const res = await fetch('http://localhost:5000/posts/' + postId, {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPost(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Update a post.\n  const updatePost = async (postId, updatedInfo) => {\n    const res = await fetch('http://localhost:5000/posts/' + postId, {\n      method: 'PUT',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(updatedInfo)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // TODO: Kevin\n  // Get google map.\n  const getGoogleMap = async (address) => {\n    const googleMap = null;\n    setMap(googleMap);\n  };\n\n  // Effect: fetch a post and its map info.\n  const { postId } = useParams();\n\n  useEffect(() => {\n    getPost(postId).then(r => {\n      if (post && post.address) {\n        getGoogleMap(post.address);\n      }\n    });\n  }, []);\n\n  return { post, map, getPost, updatePost };\n}\n"]},"metadata":{},"sourceType":"module"}