{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useEffect,useState}from'react';import{api}from'../APIs/api';export default function usePosts(){// State: posts\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];// Get all posts with its account info.\nvar getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,output;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://find-my-tutor-ubc.herokuapp.com/posts/',{method:'GET'});case 2:res=_context.sent;_context.next=5;return res.json();case 5:output=_context.sent;if(!output.success){_context.next=11;break;}setPosts(output.result);return _context.abrupt(\"return\",output.result);case 11:throw new Error(output.error);case 12:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();// Add a post.\nvar addPost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newPost){var res,output;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('https://find-my-tutor-ubc.herokuapp.com/posts',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(newPost)});case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:output=_context2.sent;if(!output.success){_context2.next=10;break;}return _context2.abrupt(\"return\",output.result);case 10:throw new Error(output.error);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function addPost(_x){return _ref2.apply(this,arguments);};}();// TODO: Jerry - filter\n// Get filtered posts.\nvar getFilteredPosts=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filter){var res,output;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch('https://find-my-tutor-ubc.herokuapp.com/posts/filter',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(filter)});case 2:res=_context3.sent;_context3.next=5;return res.json();case 5:output=_context3.sent;if(!output.success){_context3.next=11;break;}setPosts(output.result);return _context3.abrupt(\"return\",output.result);case 11:throw new Error(output.error);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function getFilteredPosts(_x2){return _ref3.apply(this,arguments);};}();// Effect: fetch posts.\nuseEffect(function(){getPosts();},[]);return{posts:posts,getPosts:getPosts,addPost:addPost};}","map":{"version":3,"sources":["/Users/kehongliu/Documents/Temp/455/find-my-tutor/client/src/frontend/hooks/usePosts.jsx"],"names":["React","useEffect","useState","api","usePosts","posts","setPosts","getPosts","fetch","method","res","json","output","success","result","Error","error","addPost","newPost","headers","body","JSON","stringify","getFilteredPosts","filter"],"mappings":"0gBAAA,oBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,GAAT,KAAoB,aAApB,CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC;AACA,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAEA;AACA,GAAMC,CAAAA,QAAQ,0FAAG,wKACGC,CAAAA,KAAK,CAAC,gDAAD,CAAmD,CACxEC,MAAM,CAAE,KADgE,CAAnD,CADR,QACTC,GADS,qCAIMA,CAAAA,GAAG,CAACC,IAAJ,EAJN,QAITC,MAJS,mBAMXA,MAAM,CAACC,OANI,0BAObP,QAAQ,CAACM,MAAM,CAACE,MAAR,CAAR,CAPa,gCAQNF,MAAM,CAACE,MARD,eAUP,IAAIC,CAAAA,KAAJ,CAAUH,MAAM,CAACI,KAAjB,CAVO,wDAAH,kBAART,CAAAA,QAAQ,0CAAd,CAcA;AACA,GAAMU,CAAAA,OAAO,2FAAG,kBAAOC,OAAP,4JACIV,CAAAA,KAAK,CAAC,+CAAD,CAAkD,CACvEC,MAAM,CAAE,MAD+D,CAEvEU,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAF8D,CAGvEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAHiE,CAAlD,CADT,QACRR,GADQ,uCAMOA,CAAAA,GAAG,CAACC,IAAJ,EANP,QAMRC,MANQ,oBAQVA,MAAM,CAACC,OARG,4DASLD,MAAM,CAACE,MATF,eAWN,IAAIC,CAAAA,KAAJ,CAAUH,MAAM,CAACI,KAAjB,CAXM,0DAAH,kBAAPC,CAAAA,OAAO,6CAAb,CAeA;AACA;AACA,GAAMM,CAAAA,gBAAgB,2FAAG,kBAAOC,MAAP,4JACLhB,CAAAA,KAAK,CAAC,sDAAD,CAAyD,CAC9EC,MAAM,CAAE,MADsE,CAE9EU,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFqE,CAG9EC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeE,MAAf,CAHwE,CAAzD,CADA,QACjBd,GADiB,uCAMFA,CAAAA,GAAG,CAACC,IAAJ,EANE,QAMjBC,MANiB,oBAQnBA,MAAM,CAACC,OARY,2BASrBP,QAAQ,CAACM,MAAM,CAACE,MAAR,CAAR,CATqB,iCAUdF,MAAM,CAACE,MAVO,eAYf,IAAIC,CAAAA,KAAJ,CAAUH,MAAM,CAACI,KAAjB,CAZe,0DAAH,kBAAhBO,CAAAA,gBAAgB,8CAAtB,CAgBA;AACAtB,SAAS,CAAC,UAAM,CACdM,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAIA,MAAO,CAAEF,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAAmBU,OAAO,CAAPA,OAAnB,CAAP,CACD","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { api } from '../APIs/api';\n\nexport default function usePosts() {\n  // State: posts\n  const [posts, setPosts] = useState([]);\n\n  // Get all posts with its account info.\n  const getPosts = async () => {\n    const res = await fetch('https://find-my-tutor-ubc.herokuapp.com/posts/', {\n      method: 'GET'\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPosts(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Add a post.\n  const addPost = async (newPost) => {\n    const res = await fetch('https://find-my-tutor-ubc.herokuapp.com/posts', {\n      method: 'POST',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(newPost)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // TODO: Jerry - filter\n  // Get filtered posts.\n  const getFilteredPosts = async (filter) => {\n    const res = await fetch('https://find-my-tutor-ubc.herokuapp.com/posts/filter', {\n      method: 'POST',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(filter)\n    });\n    const output = await res.json();\n\n    if (output.success) {\n      setPosts(output.result);\n      return output.result;\n    } else {\n      throw new Error(output.error);\n    }\n  };\n\n  // Effect: fetch posts.\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return { posts, getPosts, addPost };\n}\n"]},"metadata":{},"sourceType":"module"}